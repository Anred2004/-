// слияние
#include <iostream>
using namespace std;

void merge(int list[], int start, int end, int mid);

void mergeSort(int list[], int start, int end)
{
	int mid; // индекс среднего элемента массива
	if (start < end)  // Условие, проверяющее, если start меньше end. Если это условие выполняется, массив нуждается в сортировке.
	{

		mid = (start + end) / 2; //Вычисление индекса среднего элемента массива.
		mergeSort(list, start, mid); // Рекурсивный вызов mergeSort для сортировки левой половины массива (от start до `mid`).
		mergeSort(list, mid + 1, end); // Рекурсивный вызов mergeSort для сортировки правой половины массива (от mid + 1 до `end`).
		merge(list, start, end, mid); //  Вызов функции merge для слияния и сортировки двух отсортированных половин массива.
	}
}

void merge(int list[], int start, int end, int mid) // Объявление функции merge, которая выполняет слияние и сортировку двух отсортированных половин массива.
{
	int mergedList[8]; // Объявление временного массива mergedList размером 8 элементов для хранения отсортированных элементов.
	int i, j, k; // Объявление переменных i, j и k, которые будут использоваться для индексации итераций слияния.
	i = start; // Переменная i будет использоваться для индексации элементов в левой половине массива.
	k = start; // Переменная k будет использоваться для индексации элементов в объединенном массиве mergedList.
	j = mid + 1; // Переменная j будет использоваться для индексации элементов в правой половине массива.

	while (i <= mid && j <= end) 
	{
		if (list[i] < list[j])  
		{
			mergedList[k] = list[i]; 
			k++;
			i++; 
		}
		else 
		{
			mergedList[k] = list[j]; 
			k++; 
			j++; 
		}
	}
	cout << "\n Output \n";
	for (int i = 0; i < 8; i++)
	{
		cout << list[i] << "\t";
	}

	while (i <= mid) 
	{
		mergedList[k] = list[i]; 
		k++; 
		i++; 
	}

	while (j <= end)  
	{
		mergedList[k] = list[j]; 
		k++; 
		j++; 
	}

	for (i = start; i < k; i++)  
	{
		list[i] = mergedList[i]; 
	}

	cout << "\n Output \n";
	for (int i = 0; i < 8; i++)
	{
		cout << list[i] << "\t";
	}
}

int main()
{
	int list[8] = { 19,3,8,0,48,4,5,12 };
	cout << " Input\n";
	for (int i = 0; i < 8; i++)
	{
		cout << list[i] << "\t";
	}
	mergeSort(list, 0, 7);
	cout << "\n Output \n";
	for (int i = 0; i < 8; i++)
	{
		cout << list[i] << "\t";
	}
}

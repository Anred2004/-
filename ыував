#include <iostream>
#include <string>
#include <fstream>
#include <vector>
using namespace std;

struct xy
{
	int numb;
	string str;
};
class Practical
{
private:

	vector<xy>Vector;
	int Fib[100];

public:

	void fibonachi(int m, int Fib[100])
	{
		for (int i = 1; i < m; i++)
		{
			if (i == 0)
			{
				Fib[i] = 0;
			}
			else if ((i == 1) || (i == 2))
			{
				Fib[i] = 1;
			}
			else
			{
				Fib[i] = Fib[i - 1] + Fib[i - 2];
			}
		}
	}
	void encode()
	{
		ifstream fin("input.txt");
		ofstream fout("output.txt");
		std::string word;
		int i = 2;
		while (fin >> word)
		{
			xy s;
			s.numb = Fib[i];
			s.str = word;
			Vector.push_back(s);
			i++ ;
		}

		for (int i = 0; i < Vector.size(); i++) {
			std::cout << Vector[i].numb << " " << Vector[i].str << std::endl;
		}
	}


	void decode()
	{

	}
		
};



void decode()
{

}

void fibonachi(int m, int Fib[100])
{
	for (int i = 1; i < m; i++)
	{
		if (i == 0)
		{
			Fib[i] = 0;
		}
		else if ((i == 1) || (i == 2))
		{
			Fib[i] = 1;
		}
		else
		{
			Fib[i] = Fib[i - 1] + Fib[i - 2];
		}
	}
}
int main()
{

	string str;
	ifstream fin("input.txt");
	ofstream fout("output.txt");
	int Fib[30] = { 0 };
	int m = 0;
	fibonachi(30, Fib);
	for (int i = 0; i < 30; i++)
	{
		cout << Fib[i] << endl;
	}


	system("pause");

}

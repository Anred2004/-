//Func.hpp
#include <iostream>
#include <fstream>
using namespace std;
namespace pp
{
	void Read(int n, int m, int matrix[100][100]);
	void Write(int n, int m, int matrix[100][100]);
}

//Func.cpp
#include "Func.hpp"


namespace pp
{
	void Read(int n, int m, int matrix[100][100])
	{
		int matrix[100][100];
		int n, m;
		cin >> n;
		cin >> m;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				cin >> matrix[i][j];

			}

		}

	}
	void Write(int n, int m, int matrix[100][100])
	{
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				cout << matrix[i][j] << " ";

			}
			cout << endl;

		}
	}
	bool isPrime(int m, int mas[100])
	{

		for (int j = 0; j < m; j++)
		{
			bool flag = true;;
			if (mas[j] < 2)
			{
				flag = false;
			}
			for (int d = 2; d < sqrt(mas[j]); d++)
			{
				if (mas[j] % d == 0)
				{
					flag = false;
				}

			}
			if (flag) return true;
		}
		return false;
	}
	bool isPrime1(int m, int mas[100])
	{
		int sum = 0;
		for (int j = 0; j < m; j++)
		{
			sum += mas[j];
		}
		if (sum == 0)
		{
			return true;
		}
		return false;
	}
	bool check(int m, int n, int matrix[100][100])
	{
		for (int i = 0; i < n; i++)
		{
			if (isPrime(m, matrix[i]) && isPrime1(m, matrix[i]))
				return true;
		}
		return false;
	}

}
